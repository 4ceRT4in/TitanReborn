plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Modrinth
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}

	// CCA
	maven {
		name = "Ladysnake Mods"
		url = 'https://maven.ladysnake.org/releases'
	}

	// Curseforge
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	// EMI
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// EMI compat
	modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"
	modLocalRuntime "dev.emi:emi-fabric:${emi_version}"

	// CCA
	modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}"
	modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	include "org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	include "org.ladysnake.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}"
	include "org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/titanfabric.accesswidener")
}


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}

configurations.all {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:$loader_version")
	}
}

fabricApi {
	configureDataGeneration() {
		client = true
	}
}