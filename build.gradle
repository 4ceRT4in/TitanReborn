plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// LlamaLad7's MixinExtras
	maven { url 'https://jitpack.io' }

	// Cloth config api for custom config
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }

	// ModMenu & Fabric Shield Lib
	maven { url "https://maven.terraformersmc.com/releases/com/terraformersmc/modmenu/" }
	maven { url = 'https://jitpack.io' }

	// Modrinth
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// LlamaLad7's MixinExtras
	include(annotationProcessor(implementation("com.github.LlamaLad7:MixinExtras:0.1.1")))

	// Cloth config api for custom configs
	modApi("me.shedaniel.cloth:cloth-config-fabric:6.4.90") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// Fabric Shield lib
	modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}")
	modCompileOnly modRuntimeOnly ("com.terraformersmc:modmenu:${project.mod_menu_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation("com.github.Chocohead:Fabric-ASM:v${project.fabric_asm_version}") {
		exclude (group: "net.fabricmc.fabric-api")
	}
	include("com.github.Chocohead:Fabric-ASM:v${project.fabric_asm_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}

configurations.all {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:$loader_version")
	}
}